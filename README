link to the github repositry with the full implementation of UDP: 

https://github.com/mamgad/RUDPy

we chose UDP to TCP in prevision of very crowded situtation. 

General idea: 

Drivers arrive at the red light and their vehicles benefit from the LiFi connectivity. 
They have the possibility to push and update to the "red light cloud" using the command PUSH. The update  
contains 5 elements (arrival route, exit route, delay, parking spot and car identification). This 
procedure is the same for every car pushing the update. 
Drivers also have the possibility to request information from the "red light cloud" using the command GET. 
It will give information on the real time delay of the car exit lane. 


we managed: 
    - creating the TCP server. We used code i created for the RIO203 project
      it is not as detailled as the final code by it will be easier for me to
      build from there. 
    
    - array to be sent by cars is created, the server is aware of the element's positon 
      in the array and treat them based on it. 

    - the function that aggregates the lanes delay is ready and functional, it returns the 
      cars id and the delay accused 

TODO: 
    - implement the forwarding to the right vehicle; it will be done by comparing arrival lane 
      with the exit lane of the follwing car. 

    - Find a modelisation and usage of the CAM message.  

    - have the answer from the server returning the the arrival lane in addition to car id 
      and delay 
    
    - finding a better use case for the parking spot: See how it is appplicable in the context of a parking garage
    
    - implementing the database: link of the video https://www.youtube.com/watch?v=BfXhZDNlXy8&list=PLB5jA40tNf3tRMbTpBA0N7lfDZNLZAa9G&index=3
    
DASHBOARD: 

    Here are listed the function of the dashboard. 

        On the client side we want to see the exit road and the estimated delay on them. 

        when arriving at the parking, the number of availbale spots must be display for the driver. 


INFORMATION REQUESTED BY THE CLIENT: 

    - The client request information at the red light(access point)
    - The redlight simulates traffic information received by other user of the service
    - The redlight assess what information simulated is relevant to that user (delay on the 3 lanes)
    - Add the notion of distance to each lane. i.e. lane 1 has 300m to destination
                                                    lane 2 has 500m to destination
                                                    lane 3 has 400m to destination 
                                                     
    - Knowing that v = d/t, classification of lanes based on how fast going through them will be. 
    - we can consider this service to be an update for the driver whenever requested. 

PARKING REQUESTED BY DRIVER: 

    - At a mall/airport parking entrance and driver wants to know its capacity
    - Total number of available spots available( -1 every time the command parking is registered)
    - 1 function will  generated coordonates for an available spot immitating the CAM messages architecture. 